#================================================================================#
# This makefile created by G. Vijayakumar on 28-July-2016                        #
# adapted from FAST (B. Jonkman on 28-July-2016.                                 #
# (c) 2016 National Renewable Energy Laboratory                                  #
#                                                                                #
# This makefile has been tested on Linux x64 with gfortran-4.8.                  #
#                                                                                #
# It was designed to be used with FAST_ProgC.c for a C driver program for FAST    #
#================================================================================#

   # 32-bit or 64-bit?
#BITS = 32
BITS = 64

   # Location of source files for the DLL.
   # You may need to change these for your DLL.

SOURCE_DIR  = ../Source
SOURCE_FILES = FAST_cInterface.c FAST_ProgC.c 


   # Name of compiler to use and flags to use.
CC      = mpicc
CPP     = mpic++
CFLAGS  = -O0 -g -DHAVE_MPI

   # Destination and RootName for executable

YAMLCPPINCLUDE_DIR = ../include
YAMLCPPLIB_DIR = ../lib
FASTLIB_DIR = ../lib
DEST_DIR    = ../bin

   #==========================================================#
   # You should not need to change anything beyond this point #
   #==========================================================#

#Currently only supports Linux
# System-specific settings.
DEL_CMD   = rm -f
EXE_EXT   = _glin$(BITS)
INTER_DIR = Obj_lin$(BITS)
MD_CMD    = @mkdir -p
OBJ_EXT   = .o
PATH_SEP  = /
SYS_FILE  = SysGnuLinux

UNAME := $(shell uname -s)

CFLAGS     := $(CFLAGS) -fPIC -fpermissive -std=c++11
LDFLAGS    = -fPIC -L$(FASTLIB_DIR) -L$(YAMLCPPLIB_DIR) -lFAST_glin$(BITS) -lmap-1.20.10 -lyaml-cpp -ldl

_ALL_OBJS  = $(SOURCE_FILE:.c=$(OBJ_EXT))
ALL_OBJS   = $(patsubst %,$(INTER_DIR)/%,$(_ALL_OBJS))

# Rule to do everything.

all:     default
default:  $(INTER_DIR) $(DEST_DIR)/FAST_ProgC$(EXE_EXT)

   # General rules for compliling the files.

$(INTER_DIR)/FAST_cInterface.o: $(SOURCE_DIR)/FAST_cInterface.c $(SOURCE_DIR)/FAST_cInterface.h $(SOURCE_DIR)/dependencies/OpenFOAM/OpenFOAM_Types.h $(SOURCE_DIR)/dependencies/SuperController/SuperController_Types.h $(SOURCE_DIR)/SC.h
	$(CPP)  $(CFLAGS) -c $< -I$(SOURCE_DIR)/dependencies/OpenFOAM/ -I$(SOURCE_DIR)/dependencies/SuperController -I$(YAMLCPPINCLUDE_DIR) -o $@ 

$(INTER_DIR)/FAST_ProgC.o: $(SOURCE_DIR)/FAST_ProgC.c $(SOURCE_DIR)/FAST_cInterface.h $(INTER_DIR)/FAST_cInterface.o $(SOURCE_DIR)/dependencies/OpenFOAM/OpenFOAM_Types.h $(SOURCE_DIR)/dependencies/SuperController/SuperController_Types.h
	$(CPP)  $(CFLAGS) -c $< -I$(SOURCE_DIR) -I$(SOURCE_DIR)/dependencies/OpenFOAM/ -I$(SOURCE_DIR)/dependencies/SuperController -I$(YAMLCPPINCLUDE_DIR) -o $@

   # Make sure the destination directory for the intermediate files exist.

$(INTER_DIR):
	$(MD_CMD) $(INTER_DIR)

   # For linking 

$(DEST_DIR)/FAST_ProgC$(EXE_EXT): $(INTER_DIR)/FAST_ProgC.o $(INTER_DIR)/FAST_cInterface.o
	$(CPP) $(CFLAGS) -o $(DEST_DIR)/FAST_ProgC$(EXE_EXT) \
	$(INTER_DIR)/FAST_ProgC.o $(INTER_DIR)/FAST_cInterface.o $(LDFLAGS)

   # Cleanup afterwards.

clean:
	$(DEL_CMD) $(INTER_DIR)$(PATH_SEP)FAST_ProgC$(OBJ_EXT) $(INTER_DIR)$(PATH_SEP)FAST_cInterface$(OBJ_EXT) $(INTER_DIR)$(PATH_SEP)FAST_ProgC$(OBJ_EXT)
#	$(DEL_CMD) $(INTER_DIR)$(PATH_SEP)*$(OBJ_EXT) $(DEST_DIR)/$(OUTPUT_NAME)$(EXE_EXT)






